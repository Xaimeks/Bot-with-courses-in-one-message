from aiogram import F, Router, Dispatcher, Bot
from aiogram.types import Message
from aiogram import types
from keyboard.inline.inlinekb import get_inline_keyboard, kurs_kb, selfimpurl, iturl, design, other
from aiogram.utils.keyboard import ReplyKeyboardBuilder


bot = Bot
router = Router()
dp = Dispatcher


@router.message(F.text == '/start')
async def cmd_start(message: Message):
    builder = ReplyKeyboardBuilder()
    builder.add(types.KeyboardButton(text='üè°–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
    builder.adjust(1)
    await message.answer('‚ö°–ü—Ä–∏–≤–µ—Ç, –º–µ–Ω—è –∑–æ–≤—É—Ç –ö—É—Ä—Å–∏', reply_markup=builder.as_markup(resize_keyboard=True),
                         )
    await message.answer_sticker('CAACAgQAAxkBAAEKkU1lM5RYih9nIAgK5r6GaNw3zkpA0gACdw0AAvEUWFOUVhzRUGKbKTAE')


@router.message(F.text == 'üè°–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
async def cmd_start(message: Message):
    await message.answer('‚ö°–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=get_inline_keyboard())
    await message.answer_sticker('CAACAgQAAxkBAAEKkU1lM5RYih9nIAgK5r6GaNw3zkpA0gACdw0AAvEUWFOUVhzRUGKbKTAE')


@router.callback_query(F.data == 'kursi')
async def kursi_cmd(callback: types.CallbackQuery):
    await callback.message.edit_text('üò∂‚Äçüå´Ô∏èÔ∏è–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∫—É—Ä—Å–æ–≤')
    await callback.message.edit_reply_markup(reply_markup=kurs_kb())


@router.callback_query(F.data == 'razvitie')
async def razvitie_cmd(callback: types.CallbackQuery):
    await callback.message.edit_text('üë§–°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ')
    await callback.message.edit_reply_markup(reply_markup=selfimpurl())


@router.callback_query(F.data == 'it')
async def it_cmd(callback: types.CallbackQuery):
    await callback.message.edit_text('üíª–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ')
    await callback.message.edit_reply_markup(reply_markup=iturl())


@router.callback_query(F.data == 'design')
async def it_cmd(callback: types.CallbackQuery):
    await callback.message.edit_text('üé®–î–∏–∑–∞–π–Ω')
    await callback.message.edit_reply_markup(reply_markup=design())


@router.callback_query(F.data == 'other')
async def it_cmd(callback: types.CallbackQuery):
    await callback.message.edit_text('ü•∑–î—Ä—É–≥–æ–µ')
    await callback.message.edit_reply_markup(reply_markup=other())







